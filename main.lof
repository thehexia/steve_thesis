\contentsline {figure}{\numberline {3.1}{\ignorespaces The binding environment inside a context used to store the length and offset of fields, or the offset of headers. On the left, fields one through sixteen represent the fields that can be extracted. Each field maintains a binding list (stack). Each element in the binding list is a binding which stores the offset and length where each instance of that field can be found in the packet. }}{10}
\contentsline {figure}{\numberline {4.1}{\ignorespaces Layout syntax for Steve in BNF.}}{15}
\contentsline {figure}{\numberline {4.2}{\ignorespaces An example of how the ethernet header is written in Steve.}}{16}
\contentsline {figure}{\numberline {4.3}{\ignorespaces An example of how the IPv4 header is written in Steve. Note that the "options" field is not included because Steve does not currently support extraction or usage of dynamic length fields.}}{17}
\contentsline {figure}{\numberline {4.4}{\ignorespaces An example of a layout being nested inside another layout.}}{18}
\contentsline {figure}{\numberline {4.5}{\ignorespaces Decoder syntax for Steve in BNF.}}{19}
\contentsline {figure}{\numberline {4.6}{\ignorespaces An example of how to extract \texttt {src} and \texttt {dst} fields from the ethernet header using a decoder. Note we do not extract the \texttt {type} field here.}}{20}
\contentsline {figure}{\numberline {4.7}{\ignorespaces An example of accessing a field using the field access expression in an if-else statement.}}{21}
\contentsline {figure}{\numberline {4.8}{\ignorespaces Using arithmetic operations, bitwise operations, and variable assignment with fields in a Steve program.}}{22}
\contentsline {figure}{\numberline {4.9}{\ignorespaces An example of incorrect field access.}}{23}
